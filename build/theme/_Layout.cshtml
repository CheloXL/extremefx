<!DOCTYPE html>
<html dir="ltr" lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0,viewport-fit=cover" />
	<title>@Model.WithoutSettings.String(BlogKeys.Title)</title>
	<link href="/assets/styles/site.css" rel="stylesheet" />
</head>
<body>
	<header>
		@if (Context.String(BlogKeys.Description) != null)
		{
			<h1><a href="@Context.GetLink("/")">@Context.String(BlogKeys.Description)</a></h1>
		}
		@if (Context.String(BlogKeys.Intro) != null)
		{
			@if (Context.String(BlogKeys.Description) != null)
			{
				<hr />
			}
			<p>@Context.String(BlogKeys.Intro)</p>
		}

		@{
			List<Tuple<string, string>> pages = Context
				.Documents[Blog.Pages]
				.Where(x => x.Bool(BlogKeys.ShowInNavbar, true))
				.Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
				.Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
				.Where(x => !string.IsNullOrEmpty(x.Item1))
				.OrderBy(x => x.Item1)
				.ToList();

			if (Documents[Blog.Tags].Any())
			{
				pages.Insert(0, Tuple.Create("Tags", Context.GetLink("tags/index.html")));
			}

			if (Documents[Blog.BlogPosts].Any() && Context.Bool(BlogKeys.GenerateArchive))
			{
				pages.Insert(0, Tuple.Create("Archive", Context.GetLink(Context.String(BlogKeys.PostsPath) + "/index.html")));
			}

			if (pages.Any())
			{
				<nav>
					@foreach (Tuple<string, string> page in pages)
					{
						<a href="@(page.Item2)">@(page.Item1)</a>
					}
				</nav>
			}
		}
	</header>

	@RenderBody()
</body>
</html>

