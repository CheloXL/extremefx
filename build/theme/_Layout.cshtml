<!DOCTYPE html>
<html dir="ltr" lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0,viewport-fit=cover" />
	<meta http-equiv="imagetoolbar" content="no">

	<title>@Model.WithoutSettings.String(BlogKeys.Title)</title>

	<link href="http://fonts.googleapis.com/css?family=Roboto:400,300|Roboto+Condensed:300" rel="stylesheet" type="text/css">
	<link href="/assets/styles/site.css" rel="stylesheet" />

	@if (Context.String(BlogKeys.RssPath) != null)
	{
		<link type="application/rss+xml" rel="alternate" title="@Context.String(BlogKeys.Title)" href="@Context.GetLink(Context.String(BlogKeys.RssPath))" />
	}
	@if (Context.String(BlogKeys.AtomPath) != null)
	{
		<link type="application/atom+xml" rel="alternate" title="@Context.String(BlogKeys.Title)" href="@Context.GetLink(Context.String(BlogKeys.AtomPath))" />
	}

	<meta property="og:title" content="@Context.String(BlogKeys.Title)" />
	@* <meta property="og:image" content="@Blog.Image" /> *@
	<meta property="og:type" content="website" />
	<meta property="og:url" content="@Context.GetLink(Model, true)" />
</head>
<body>
	<div class="wrapper">
		<header>
			<hr />
			<div>
				<p><strong><a href="@Context.GetLink("/")">@Context.String(BlogKeys.Description)</a></strong> <span>@Context.String(BlogKeys.Intro)</span></p>

				@{
					List<Tuple<string, string>> pages = Context
						.Documents[Blog.Pages]
						.Where(x => x.Bool(BlogKeys.ShowInNavbar, true))
						.Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
						.Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
						.Where(x => !string.IsNullOrEmpty(x.Item1))
						.OrderBy(x => x.Item1)
						.ToList();

					if (Documents[Blog.BlogPosts].Any() && Context.Bool(BlogKeys.GenerateArchive))
					{
						pages.Insert(0, Tuple.Create("Archive", Context.GetLink(Context.String(BlogKeys.PostsPath) + "/index.html")));
					}

					//if (Documents[Blog.Tags].Any())
					//{
					//	pages.Insert(0, Tuple.Create("Tags", Context.GetLink("tags/index.html")));
					//}

					@if (Context.String(BlogKeys.RssPath) != null) {
						pages.Add(Tuple.Create("Suscribe", Context.GetLink(Context.String(BlogKeys.RssPath))));
					}

					if (pages.Any())
					{
						<nav>
							@foreach (Tuple<string, string> page in pages)
							{
								<a href="@(page.Item2)">@(page.Item1)</a>
							}
						</nav>
					}
				}
			</div>
		</header>
		<main>
			@RenderBody()
		</main>
		<aside>
			<div class="about">
				<h4>About the author</h4>
				<p>
					<strong>Marcelo Volmaro - User Experience Specialist</strong>
					Marcelo is an award-winning user experience specialist, working on information architecture, interaction design, usability engineering,
					visual design and prototype engineering.<br />
					He works with teams of top web designers, developers and localization specialists located all over the world helping
					clients design, develop, and deploy usable global applications/websites that fully function for the world's markets.
				</p>
			</div>
			<div class="tags">
			@if (Documents[Blog.Tags].Any())
			{
				<h4>Tags</h4>
				<div>
					@foreach (IDocument tagDocument in Documents[Blog.Tags]
						.GroupBy(x => x.String(BlogKeys.Tag)).Select(x => x.Where(p => p.Get<int>(Keys.CurrentPage) == 1).First())
						.OrderByDescending(x => x.Get<int>(Keys.TotalItems)).Take(10))
					{
						string tag = tagDocument.String(BlogKeys.Tag);
						string postCount = tagDocument.String(Keys.TotalItems);
						<a href="@Context.GetLink(tagDocument)"><b>@tag</b> <i>@postCount</i></a>
					}
				</div>
			}
			</div>
		</aside>
	</div>
	<footer>
		<hr />
		<p>© 2005 - 2020 Extreme|FX. All rights reserved. Trademarks are property of their respective owners.</p>
	</footer>
</body>
</html>

